#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/experiments/$benchmark_name/$project_name/$bug_id
current_dir=$PWD
mkdir -p $dir_name
cd $dir_name
mkdir dev-patch

project_url=https://github.com/libarchive/libarchive.git
fix_commit_id=3ad08e01b4d253c66ae56414886089684155af22
bug_commit_id=v3.2.0

cd $dir_name
git clone $project_url src
cd src
git checkout $bug_commit_id
git format-patch -1 $fix_commit_id
cp *.patch $dir_name/dev-patch/fix.patch

# perform some macro expansion on source code
fix_file=libarchive/archive_read_support_format_iso9660.c
grep '^\s*#\s*include' $fix_file > /tmp/include.c
grep -Pv '^\s*#\s*include\b' $fix_file > /tmp/code.c
gcc -E /tmp/code.c | grep -v ^# > /tmp/preprocessed.c
cat /tmp/include.c > $fix_file.done
cat /tmp/preprocessed.c >> $fix_file.done
mv $fix_file $fix_file.old
mv $fix_file.done $fix_file

autoreconf -i


cd $dir_name/src
seed_dir=$dir_name/seed-dir
# Copy Seed Files
mkdir $seed_dir
cp $script_dir/tests/*  $seed_dir
find . -type f -iname '*.iso' -exec cp  {} $seed_dir \;


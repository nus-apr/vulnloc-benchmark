#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 4 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id

fix_file=$dir_name/src/$2
cd $dir_name/src

# perform some macro expansion on source code, since fuzzrepair
# cannot interpret macros now
grep '^\s*#\s*include' $fix_file > /tmp/include.c
grep -Pv '^\s*#\s*include\b' $fix_file > /tmp/code.c
gcc -E /tmp/code.c | grep -v ^# > /tmp/preprocessed.c
cat /tmp/include.c > $fix_file.done
cat /tmp/preprocessed.c >> $fix_file.done
mv $fix_file $fix_file.old
mv $fix_file.done $fix_file

$script_dir/../config.sh $1

make clean
bear $script_dir/../build.sh $1
cd $LIBPATCH_DIR/rewriter
./rewritecond $fix_file -o $fix_file
ret=$?
if [[ ret -eq 1 ]]
then
   exit 128
fi

# build with AFL instrumentation
cd $dir_name/src/
make clean
make distclean
CC="afl-clang-fast" CXX="afl-clang-fast++" $script_dir/../config.sh $1
R_CFLAGS="-fsanitize=signed-integer-overflow -O0 -g -Wno-error -fPIE" R_LDFLAGS="-fsanitize=signed-integer-overflow -pie" $script_dir/../build.sh $1
